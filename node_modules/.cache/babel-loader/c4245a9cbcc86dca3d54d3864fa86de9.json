{"ast":null,"code":"var _jsxFileName = \"/Users/danielpiga/Desktop/CV/src/components/footer/footer.js\";\nimport React from 'react';\nimport \"./footer.css\";\nimport { getDefaultNormalizer } from \"@testing-library/dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst nodemailer = require(\"nodemailer\");\n\nfunction Footer() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"footer\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You can contact me here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 53\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 55\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 53\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      onClick: () => main().catch(console.error)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Footer;\nexport default Footer; // async..await is not allowed in global scope, must use a wrapper\n\nasync function main() {\n  // Generate test SMTP service account from ethereal.email\n  // Only needed if you don't have a real mail account for testing\n  let testAccount = await nodemailer.createTestAccount(); // create reusable transporter object using the default SMTP transport\n\n  let transporter = nodemailer.createTransport({\n    host: \"smtp.gmail.com\",\n    port: 465,\n    secure: true,\n    // true for 465, false for other ports\n    auth: {\n      user: 'pigos487@gmail.com',\n      // generated ethereal user\n      pass: \"Danmegamix44\" // generated ethereal password\n\n    }\n  }); // send mail with defined transport object\n\n  let info = await transporter.sendMail({\n    from: '\"Fred Foo ðŸ‘»\" <pigos4@gmail.com>',\n    // sender address\n    to: \"pigos487@gmail.com\",\n    // list of receivers\n    subject: \"Hello âœ”\",\n    // Subject line\n    text: \"Hello world?\",\n    // plain text body\n    html: \"<b>Hello world?</b>\" // html body\n\n  });\n  console.log(\"Message sent: %s\", info.messageId); // Message sent: <b658f8ca-6296-ccf4-8306-87d57a0b4321@example.com>\n  // Preview only available when sending through an Ethereal account\n\n  console.log(\"Preview URL: %s\", nodemailer.getTestMessageUrl(info)); // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Footer\");","map":{"version":3,"sources":["/Users/danielpiga/Desktop/CV/src/components/footer/footer.js"],"names":["React","getDefaultNormalizer","nodemailer","require","Footer","main","catch","console","error","testAccount","createTestAccount","transporter","createTransport","host","port","secure","auth","user","pass","info","sendMail","from","to","subject","text","html","log","messageId","getTestMessageUrl"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,SAASC,oBAAT,QAAqC,sBAArC;;;AACA,MAAMC,UAAU,GAAGC,OAAO,CAAC,YAAD,CAA1B;;AAIA,SAASC,MAAT,GAAkB;AAChB,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,YAFF,eAEgD;AAAA;AAAA;AAAA;AAAA,YAFhD,eAGE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,YAHF,eAGkD;AAAA;AAAA;AAAA;AAAA,YAHlD,eAIE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,YAJF,eAIgD;AAAA;AAAA;AAAA;AAAA,YAJhD,eAKE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,OAAO,EAAE,MAAIC,IAAI,GAAGC,KAAP,CAAaC,OAAO,CAACC,KAArB;AAAlC;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;KAXQJ,M;AAaT,eAAeA,MAAf,C,CAOA;;AACA,eAAeC,IAAf,GAAsB;AACpB;AACA;AACA,MAAII,WAAW,GAAG,MAAMP,UAAU,CAACQ,iBAAX,EAAxB,CAHoB,CAKpB;;AACA,MAAIC,WAAW,GAAGT,UAAU,CAACU,eAAX,CAA2B;AAC3CC,IAAAA,IAAI,EAAE,gBADqC;AAE3CC,IAAAA,IAAI,EAAE,GAFqC;AAG3CC,IAAAA,MAAM,EAAE,IAHmC;AAG7B;AACdC,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAE,oBADF;AACwB;AAC5BC,MAAAA,IAAI,EAAE,cAFF,CAEkB;;AAFlB;AAJqC,GAA3B,CAAlB,CANoB,CAgBpB;;AACA,MAAIC,IAAI,GAAG,MAAMR,WAAW,CAACS,QAAZ,CAAqB;AACpCC,IAAAA,IAAI,EAAE,kCAD8B;AACM;AAC1CC,IAAAA,EAAE,EAAE,oBAFgC;AAEV;AAC1BC,IAAAA,OAAO,EAAE,SAH2B;AAGhB;AACpBC,IAAAA,IAAI,EAAE,cAJ8B;AAId;AACtBC,IAAAA,IAAI,EAAE,qBAL8B,CAKP;;AALO,GAArB,CAAjB;AAQAlB,EAAAA,OAAO,CAACmB,GAAR,CAAY,kBAAZ,EAAgCP,IAAI,CAACQ,SAArC,EAzBoB,CA0BpB;AAEA;;AACApB,EAAAA,OAAO,CAACmB,GAAR,CAAY,iBAAZ,EAA+BxB,UAAU,CAAC0B,iBAAX,CAA6BT,IAA7B,CAA/B,EA7BoB,CA8BpB;AACD","sourcesContent":["import React from 'react';\nimport \"./footer.css\";\nimport { getDefaultNormalizer } from \"@testing-library/dom\";\nconst nodemailer = require(\"nodemailer\");\n\n\n\nfunction Footer() {\n  return (\n    <div className=\"footer\">\n      <p>You can contact me here</p>\n      <input type=\"text\" placeholder=\"Name\"></input><br></br>\n      <input type=\"text\" placeholder=\"Number\"></input><br></br>\n      <input type=\"text\" placeholder=\"Text\"></input><br></br>\n      <input type=\"button\" value=\"submit\"></input>\n      <input type=\"button\" onClick={()=>main().catch(console.error)}></input>\n    </div>\n  );\n}\n\nexport default Footer;\n\n\n\n\n\n\n// async..await is not allowed in global scope, must use a wrapper\nasync function main() {\n  // Generate test SMTP service account from ethereal.email\n  // Only needed if you don't have a real mail account for testing\n  let testAccount = await nodemailer.createTestAccount();\n\n  // create reusable transporter object using the default SMTP transport\n  let transporter = nodemailer.createTransport({\n    host: \"smtp.gmail.com\",\n    port: 465,\n    secure: true, // true for 465, false for other ports\n    auth: {\n      user: 'pigos487@gmail.com', // generated ethereal user\n      pass: \"Danmegamix44\", // generated ethereal password\n    },\n  });\n\n  // send mail with defined transport object\n  let info = await transporter.sendMail({\n    from: '\"Fred Foo ðŸ‘»\" <pigos4@gmail.com>', // sender address\n    to: \"pigos487@gmail.com\", // list of receivers\n    subject: \"Hello âœ”\", // Subject line\n    text: \"Hello world?\", // plain text body\n    html: \"<b>Hello world?</b>\", // html body\n  });\n\n  console.log(\"Message sent: %s\", info.messageId);\n  // Message sent: <b658f8ca-6296-ccf4-8306-87d57a0b4321@example.com>\n\n  // Preview only available when sending through an Ethereal account\n  console.log(\"Preview URL: %s\", nodemailer.getTestMessageUrl(info));\n  // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}